{
	"dependency": {
		"build": [
			"python",
			"build.py"
		]
	},
	"targets": [
		{
			"name": "ios",
			"data": {
				"headerSearchPaths": [
					"${EZORED_PROJECT_ROOT}${EZORED_DS}vendor${EZORED_DS}ezored-sample${EZORED_DS}djinni${EZORED_DS}cpp-output",
					"${EZORED_PROJECT_ROOT}${EZORED_DS}vendor${EZORED_DS}ezored-sample${EZORED_DS}djinni${EZORED_DS}objc-output",
					"${EZORED_PROJECT_ROOT}${EZORED_DS}vendor${EZORED_DS}ezored-sample${EZORED_DS}source/objc"
				],
				"headerFiles": [
					"${EZORED_PROJECT_ROOT}${EZORED_DS}vendor${EZORED_DS}ezored-sample${EZORED_DS}djinni${EZORED_DS}cpp-output${EZORED_DS}hello_world.hpp",
					"${EZORED_PROJECT_ROOT}${EZORED_DS}vendor${EZORED_DS}ezored-sample${EZORED_DS}djinni${EZORED_DS}cpp-output${EZORED_DS}hello_world_proxy.hpp",
					"${EZORED_PROJECT_ROOT}${EZORED_DS}vendor${EZORED_DS}ezored-sample${EZORED_DS}djinni${EZORED_DS}objc-output${EZORED_DS}EzoredHelloWorld.h",
					"${EZORED_PROJECT_ROOT}${EZORED_DS}vendor${EZORED_DS}ezored-sample${EZORED_DS}djinni${EZORED_DS}objc-output${EZORED_DS}EzoredHelloWorld+Private.h",
					"${EZORED_PROJECT_ROOT}${EZORED_DS}vendor${EZORED_DS}ezored-sample${EZORED_DS}djinni${EZORED_DS}objc-output${EZORED_DS}EzoredHelloWorldProxy.h",					
					"${EZORED_PROJECT_ROOT}${EZORED_DS}vendor${EZORED_DS}ezored-sample${EZORED_DS}djinni${EZORED_DS}objc-output${EZORED_DS}EzoredHelloWorldProxy+Private.h",
					"${EZORED_PROJECT_ROOT}${EZORED_DS}vendor${EZORED_DS}ezored-sample${EZORED_DS}source${EZORED_DS}objc${EZORED_DS}EzoredHelloWorldProxyImpl.h",
					"${EZORED_PROJECT_ROOT}${EZORED_DS}vendor${EZORED_DS}ezored-sample${EZORED_DS}source${EZORED_DS}cpp${EZORED_DS}HelloWorldImpl.hpp"
				],
				"sourceFiles": [
					"${EZORED_PROJECT_ROOT}${EZORED_DS}vendor${EZORED_DS}ezored-sample${EZORED_DS}djinni${EZORED_DS}objc-output${EZORED_DS}EzoredHelloWorld+Private.mm",
					"${EZORED_PROJECT_ROOT}${EZORED_DS}vendor${EZORED_DS}ezored-sample${EZORED_DS}djinni${EZORED_DS}objc-output${EZORED_DS}EzoredHelloWorldProxy+Private.mm",
					"${EZORED_PROJECT_ROOT}${EZORED_DS}vendor${EZORED_DS}ezored-sample${EZORED_DS}source${EZORED_DS}objc${EZORED_DS}EzoredHelloWorldProxyImpl.m",
					"${EZORED_PROJECT_ROOT}${EZORED_DS}vendor${EZORED_DS}ezored-sample${EZORED_DS}source${EZORED_DS}cpp${EZORED_DS}HelloWorldImpl.cpp"
				],
				"frameworkLinks": [
					"UIKit"
				]
			}
		},
		{
			"name": "android",
			"data": {
				"headerSearchPaths": [
					"${EZORED_PROJECT_ROOT}${EZORED_DS}vendor${EZORED_DS}ezored-sample${EZORED_DS}bridge",
					"${EZORED_PROJECT_ROOT}${EZORED_DS}vendor${EZORED_DS}ezored-sample${EZORED_DS}djinni${EZORED_DS}cpp-output",
					"${EZORED_PROJECT_ROOT}${EZORED_DS}vendor${EZORED_DS}ezored-sample${EZORED_DS}djinni${EZORED_DS}jni-output",
					"${EZORED_PROJECT_ROOT}${EZORED_DS}vendor${EZORED_DS}ezored-sample${EZORED_DS}source"
				],
				"headerFiles": [
					"${EZORED_PROJECT_ROOT}${EZORED_DS}vendor${EZORED_DS}ezored-sample${EZORED_DS}djinni${EZORED_DS}cpp-output${EZORED_DS}hello_world_bridge.hpp",
					"${EZORED_PROJECT_ROOT}${EZORED_DS}vendor${EZORED_DS}ezored-sample${EZORED_DS}djinni${EZORED_DS}jni-output${EZORED_DS}NativeHelloWorldBridge.hpp",
					"${EZORED_PROJECT_ROOT}${EZORED_DS}vendor${EZORED_DS}ezored-sample${EZORED_DS}bridge${EZORED_DS}HelloWorldBridgeImpl.hpp"
				],
				"sourceFiles": [
					"${EZORED_PROJECT_ROOT}${EZORED_DS}vendor${EZORED_DS}ezored-sample${EZORED_DS}djinni${EZORED_DS}jni-output${EZORED_DS}NativeHelloWorldBridge.cpp",
					"${EZORED_PROJECT_ROOT}${EZORED_DS}vendor${EZORED_DS}ezored-sample${EZORED_DS}source${EZORED_DS}HelloWorld.cpp",
					"${EZORED_PROJECT_ROOT}${EZORED_DS}vendor${EZORED_DS}ezored-sample${EZORED_DS}bridge${EZORED_DS}HelloWorldBridgeImpl.cpp"
				],
				"copyFiles": [
					{
						"from": "${EZORED_VENDOR_DIR}${EZORED_DS}ezored-sample${EZORED_DS}djinni${EZORED_DS}java-output${EZORED_DS}HelloWorldBridge.java",
						"to": "${EZORED_FULL_TARGET_DIR}${EZORED_DS}library${EZORED_DS}src${EZORED_DS}main${EZORED_DS}java${EZORED_DS}com${EZORED_DS}ezored${EZORED_DS}sample${EZORED_DS}HelloWorldBridge.java"
					}
				]
			}
		}
	]
}