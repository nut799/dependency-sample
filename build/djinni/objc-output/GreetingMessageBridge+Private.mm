// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from proj.djinni

#import "GreetingMessageBridge+Private.h"
#import "GreetingMessageBridge.h"
#import "DJICppWrapperCache+Private.h"
#import "DJIError.h"
#import "DJIMarshal+Private.h"
#import "GreetingMessagePlatformService+Private.h"
#include <exception>
#include <stdexcept>
#include <utility>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

@interface GreetingMessageBridge ()

- (id)initWithCpp:(const std::shared_ptr<::EzoRed::Sample::GreetingMessageBridge>&)cppRef;

@end

@implementation GreetingMessageBridge {
    ::djinni::CppProxyCache::Handle<std::shared_ptr<::EzoRed::Sample::GreetingMessageBridge>> _cppRefHandle;
}

- (id)initWithCpp:(const std::shared_ptr<::EzoRed::Sample::GreetingMessageBridge>&)cppRef
{
    if (self = [super init]) {
        _cppRefHandle.assign(cppRef);
    }
    return self;
}

+ (nullable GreetingMessageBridge *)sharedInstance:(nullable id<GreetingMessagePlatformService>)ps {
    try {
        auto objcpp_result_ = ::EzoRed::Sample::GreetingMessageBridge::sharedInstance(::djinni_generated::GreetingMessagePlatformService::toCpp(ps));
        return ::djinni_generated::GreetingMessageBridge::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)setMessage:(nonnull NSString *)message {
    try {
        _cppRefHandle.get()->setMessage(::djinni::String::toCpp(message));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (nonnull NSString *)getMessage {
    try {
        auto objcpp_result_ = _cppRefHandle.get()->getMessage();
        return ::djinni::String::fromCpp(objcpp_result_);
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)printMessage {
    try {
        _cppRefHandle.get()->printMessage();
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

- (void)showGreetingMessageAlert:(nonnull NSString *)title
                         message:(nonnull NSString *)message {
    try {
        _cppRefHandle.get()->showGreetingMessageAlert(::djinni::String::toCpp(title),
                                                      ::djinni::String::toCpp(message));
    } DJINNI_TRANSLATE_EXCEPTIONS()
}

namespace djinni_generated {

auto GreetingMessageBridge::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return objc->_cppRefHandle.get();
}

auto GreetingMessageBridge::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return ::djinni::get_cpp_proxy<GreetingMessageBridge>(cpp);
}

}  // namespace djinni_generated

@end
