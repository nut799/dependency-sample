// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from proj.djinni

#include "GreetingMessageBridge.hpp"  // my header
#include "GreetingMessagePlatformService.hpp"
#include "Marshal.hpp"

namespace djinni_generated {

GreetingMessageBridge::GreetingMessageBridge() : ::djinni::JniInterface<::EzoRed::Sample::GreetingMessageBridge, GreetingMessageBridge>("com/ezored/sample/GreetingMessageBridge$CppProxy") {}

GreetingMessageBridge::~GreetingMessageBridge() = default;


CJNIEXPORT void JNICALL Java_com_ezored_sample_GreetingMessageBridge_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::EzoRed::Sample::GreetingMessageBridge>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_com_ezored_sample_GreetingMessageBridge_sharedInstance(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::EzoRed::Sample::GreetingMessageBridge::sharedInstance();
        return ::djinni::release(::djinni_generated::GreetingMessageBridge::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_com_ezored_sample_GreetingMessageBridge_00024CppProxy_native_1setMessage(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_message)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::EzoRed::Sample::GreetingMessageBridge>(nativeRef);
        ref->setMessage(::djinni::String::toCpp(jniEnv, j_message));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jstring JNICALL Java_com_ezored_sample_GreetingMessageBridge_00024CppProxy_native_1getMessage(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::EzoRed::Sample::GreetingMessageBridge>(nativeRef);
        auto r = ref->getMessage();
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_com_ezored_sample_GreetingMessageBridge_00024CppProxy_native_1printMessage(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::EzoRed::Sample::GreetingMessageBridge>(nativeRef);
        ref->printMessage();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_ezored_sample_GreetingMessageBridge_00024CppProxy_native_1showGreetingMessageAlert(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_title, jstring j_message)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::EzoRed::Sample::GreetingMessageBridge>(nativeRef);
        ref->showGreetingMessageAlert(::djinni::String::toCpp(jniEnv, j_title),
                                      ::djinni::String::toCpp(jniEnv, j_message));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_ezored_sample_GreetingMessageBridge_00024CppProxy_native_1setPlatformService(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_ps)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::EzoRed::Sample::GreetingMessageBridge>(nativeRef);
        ref->setPlatformService(::djinni_generated::GreetingMessagePlatformService::toCpp(jniEnv, j_ps));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

}  // namespace djinni_generated
